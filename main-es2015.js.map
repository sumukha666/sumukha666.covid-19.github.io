{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/district/district.component.ts","./src/app/components/district/district.component.html","./src/app/components/graphs/graphs.component.ts","./src/app/components/graphs/graphs.component.html","./src/app/components/header-nav/header-nav.component.ts","./src/app/components/header-nav/header-nav.component.html","./src/app/components/homepage/homepage.component.ts","./src/app/components/homepage/homepage.component.html","./src/app/components/state-graph/state-graph.component.ts","./src/app/components/state-graph/state-graph.component.html","./src/app/components/states/states.component.ts","./src/app/components/states/states.component.html","./src/app/components/table-view/table-view.component.ts","./src/app/components/table-view/table-view.component.html","./src/app/services/covid-api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { StatesComponent } from './components/states/states.component';\nimport { DistrictComponent } from './components/district/district.component';\n\nconst routes: Routes = [\n  {\n    path: \"homepage\",\n    component: HomepageComponent\n  },\n  {\n    path: \"states/:name\",\n    component: StatesComponent\n  },\n  {\n    path: \"district/:dname\",\n    component: DistrictComponent\n  },\n  {\n    path: \"**\",\n    component: HomepageComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Covid-app';\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderNavComponent } from './components/header-nav/header-nav.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TableViewComponent } from './components/table-view/table-view.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { GraphsComponent } from './components/graphs/graphs.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { StatesComponent } from './components/states/states.component';\nimport { DistrictComponent } from './components/district/district.component';\nimport { StateGraphComponent } from './components/state-graph/state-graph.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderNavComponent,\n    TableViewComponent,\n    HomepageComponent,\n    GraphsComponent,\n    StatesComponent,\n    DistrictComponent,\n    StateGraphComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    FlexLayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    GoogleChartsModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\n@Component({\n  selector: 'app-district',\n  templateUrl: './district.component.html',\n  styleUrls: ['./district.component.scss']\n})\nexport class DistrictComponent implements OnInit {\n\n  constructor(private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.router.snapshot.params)\n  }\n\n}\n","<p>district works!</p>","import { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.scss']\n})\nexport class GraphsComponent implements OnInit {\n  chart = []\n  constructor(private _covidAPI: CovidApiService) { }\n\n  title = 'Number of COVID-19 confirmed cases';\n  type = 'LineChart';\n  recoveredData = []\n  confirmData = []\n  deceasedData = []\n  data = [\n  ];\n  //columnNames = ['Browser', 'Percentage'];\n  options = {\n    colors: ['#e0440e', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],\n    is3D: true,\n    hAxis: {\n      title: 'Date'\n    },\n    // vAxis: {\n    //   title: 'Number of COVID-19 confirmed cases'\n    // },\n    pointSize: 5,\n    crosshair: {\n      color: '#000000',\n      trigger: 'selection'\n    }\n  };\n  width = 350;\n  height = 200;\n\n  stateTitle = \"COVID-19 information in\"\n  stateType = 'BarChart';\n  stateData = []\n  stateGraphOptions = {};\n\n  stateActiveCases = 0;\n  stateName = \"\";\n  stateConfirmed = 0\n  stateRecovered = 0\n  stateDeceased = 0\n  stateObject = {}\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit(): void {\n    this._covidAPI.getCasesByDate().subscribe(\n      (res) => {\n        res[\"cases_time_series\"].forEach(element => {\n          this.confirmData.push([element[\"date\"], +element[\"totalconfirmed\"]])\n          this.data.push([element[\"date\"], +element[\"totalconfirmed\"]]);\n          this.deceasedData.push([element[\"date\"], +element[\"totaldeceased\"]])\n          this.recoveredData.push([element[\"date\"], +element[\"totalrecovered\"]])\n        })\n        this.initilizeDailyGraphData(this.confirmData)\n      }\n    )\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        Object.keys(res).forEach(key => {\n          if (key !== \"State Unassigned\") {\n            this.stateName = key;\n            Object.keys(res[key]).forEach(district => {\n              if (district === \"districtData\") {\n                Object.keys(res[key][district]).forEach(city => {\n                  this.stateActiveCases = this.stateActiveCases + res[key][district][city][\"active\"];\n                  this.stateConfirmed = this.stateConfirmed + res[key][district][city][\"confirmed\"];\n                  this.stateRecovered = this.stateRecovered + res[key][district][city][\"recovered\"];\n                  this.stateDeceased = this.stateDeceased + res[key][district][city][\"deceased\"]\n                })\n              }\n            })\n            this.stateTitle = \"COVID-19 information in Karnataka State\"\n            this.stateObject[this.stateName] = { active: this.stateActiveCases, recovered: this.stateRecovered, deceased: this.stateDeceased, confirmed: this.stateConfirmed }\n          }\n        })\n        this.stateData = [\n          [\"Active\", this.stateObject[\"Karnataka\"].active],\n          [\"Confirmed\", this.stateObject[\"Karnataka\"].confirmed],\n          [\"Recovered\", this.stateObject[\"Karnataka\"].recovered],\n          [\"Deceased\", this.stateObject[\"Karnataka\"].deceased]\n        ]\n        //console.log(this.stateObject)\n        this.stateoptions = Object.keys(this.stateObject)\n      }\n    )\n\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  onClickConfimButton(event) {\n    this.data = this.confirmData;\n    this.title = 'Number of COVID-19 Confirmed cases'\n  }\n  onClickRecoveredButton(event) {\n    this.data = this.recoveredData;\n    this.title = 'Number of COVID-19 Recovered cases'\n  }\n  onClickDeceasedButton(event) {\n    this.data = this.deceasedData;\n    this.title = 'Number of COVID-19 Deceased cases'\n  }\n  last15Days(event) {\n\n    this.data = this.data.slice(this.data.length - 15, this.data.length);\n    this.title = this.title.includes(\" in last 15 days\")? this.title : this.title+ \" in last 15 days\"\n  }\n  initilizeDailyGraphData(data){\n    this.data=data;\n  }\n\n  onStateChange(event) {\n    console.log(event.source[\"_element\"][\"nativeElement\"][\"outerText\"])\n\n    this.stateData = [\n      [\"Active\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].active],\n      [\"Confirmed\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].confirmed],\n      [\"Recovered\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].recovered],\n      [\"Deceased\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].deceased]\n    ]\n    this.stateTitle = \"COVID-19 information in \" + event.source[\"_element\"][\"nativeElement\"][\"outerText\"] + \" State\"\n  }\n}\n","<mat-card class=\"example-card margin-1rem\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Covid-19 Cases in India</mat-card-title>\n\n    <!-- <mat-card-actions class=\"actionBtn\">\n        <button mat-raised-button color=\"primary\"  (click)=\"last15Days($event)\">last 15 days</button>\n      </mat-card-actions> -->\n    <mat-card-subtitle class=\"headerBtn\">\n      <mat-card-actions class=\"actionBtn\">\n        <button mat-raised-button color=\"primary\" (click)=\"last15Days($event)\" class=\"btn\">last 15 days</button>\n      </mat-card-actions>\n    </mat-card-subtitle>\n\n    <!-- <div>\n      <mat-card-actions>\n        <button mat-button>Confirmed</button></mat-card-actions>\n    </div> -->\n  </mat-card-header>\n  <div class=\"graphId1\">\n    <google-chart [title]=\"title\" [type]=\"type\" [data]=\"data\" [options]=\"options\" [width]=\"width\" [height]=\"height\">\n    </google-chart>\n  </div>\n  <!-- <mat-card-content>\n      <p>\n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n        bred for hunting.\n      </p>\n    </mat-card-content> -->\n  <mat-card-actions class=\"display-flex\">\n    <button mat-stroked-button (click)=\"onClickConfimButton($event)\" class=\"btn\" color=\"primary\">Confirmed</button>\n    <button mat-stroked-button (click)=\"onClickRecoveredButton($event)\" class=\"btn\" color=\"primary\">Recovered</button>\n    <button mat-stroked-button (click)=\"onClickDeceasedButton($event)\" class=\"btn\" color=\"primary\">Deceased</button>\n  </mat-card-actions>\n</mat-card>\n\n\n<!-- <div id=\"graphId\">\n    <google-chart [title]=\"title\" [type]=\"type\" [data]=\"data\" [options]=\"options\" [width]=\"width\" [height]=\"height\">\n    </google-chart>\n</div> -->\n\n<mat-card class=\"example-card margin-1rem\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Covid-19 Cases in India</mat-card-title>\n    <mat-card-subtitle>\n      <mat-card-actions>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width padding-sides-1rem\">\n            <input type=\"text\" placeholder=\"Select State\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\n              [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n              <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\"\n                (onSelectionChange)=\"onStateChange($event)\">\n                {{option}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </form>\n      </mat-card-actions>\n    </mat-card-subtitle>\n\n  </mat-card-header>\n  <div class=\"graphId2\">\n    <google-chart [title]=\"stateTitle\" [type]=\"stateType\" [data]=\"stateData\" [options]=\"stateoptions\" [width]=\"width\"\n      [height]=\"height\">\n    </google-chart>\n  </div>\n</mat-card>","import { Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header-nav',\n  templateUrl: './header-nav.component.html',\n  styleUrls: ['./header-nav.component.scss']\n})\nexport class HeaderNavComponent implements OnInit{\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() showStateGraph;\n  ngOnInit(){\n    \n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/homepage\">Home</a>\n      <a mat-list-item routerLink=\"#\">About Covid-19</a>\n      <a mat-list-item routerLink=\"#\">Help</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Covid-app</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"65%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n        <app-table-view [columnsToDisplay]=\"columnsToDisplay\" [stateNameToDisplay]=\"stateNameToDisplay\" [disableRowClick]=\"showStateGraph\"></app-table-view>\n      </div>\n      <div fxFlex=\"35%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n          <div *ngIf=\"showStateGraph else indaGraphs\">\n            <app-state-graph></app-state-graph>\n          </div>\n          <ng-template #indaGraphs>  \n          <app-graphs></app-graphs>\n        </ng-template>\n        </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { map } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor(private _covidAPI: CovidApiService) { }\n  columnsToDisplay = [\"State\", \"Confirmed\", \"Active\", \"Recovered\", \"Deceased\"];\n  ngOnInit(): void {\n\n    }\n\n}\n","<app-header-nav [columnsToDisplay]=\"columnsToDisplay\"></app-header-nav>","import { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-state-graph',\n  templateUrl: './state-graph.component.html',\n  styleUrls: ['./state-graph.component.scss']\n})\n\nexport class StateGraphComponent implements OnInit {\n  chart = []\n  constructor(private _covidAPI: CovidApiService, private router: ActivatedRoute) { }\n\n  width = 350;\n  height = 200;\n\n  districtTitle = \"COVID-19 information in\"\n  districtType = 'BarChart';\n  districtData = []\n  districtGraphOptions = {};\n\n  districtActiveCases = 0;\n  districtName = \"\";\n  districtConfirmed = 0\n  districtRecovered = 0\n  districtDeceased = 0\n  districtObject = {}\n  stateName = \"\"\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit(): void {\n\n    this.stateName = this.router.snapshot.params.name;\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n\n        let districtsObj = res[this.stateName][\"districtData\"]\n        this.districtObject = districtsObj\n        this.stateoptions = Object.keys(districtsObj)\n        this.districtData = [\n          [\"Active\", districtsObj[this.stateoptions[0]].active],\n          [\"Confirmed\", districtsObj[this.stateoptions[0]].confirmed],\n          [\"Recovered\", districtsObj[this.stateoptions[0]].recovered],\n          [\"Deceased\", districtsObj[this.stateoptions[0]].deceased]\n        ]\n        this.districtTitle = \"COVID-19 information in \" + this.stateoptions[0];\n        console.log(this.stateoptions[0])\n        });\n\n      this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  onStateChange(event){\n    //console.log(event.option.value)\n    this.districtData = [\n          [\"Active\", this.districtObject[event.option.value].active],\n          [\"Confirmed\", this.districtObject[event.option.value].confirmed],\n          [\"Recovered\", this.districtObject[event.option.value].recovered],\n          [\"Deceased\", this.districtObject[event.option.value].deceased]\n        ]\n        this.districtTitle = \"COVID-19 information in \" + event.option.value + \" District\"\n  }\n}\n","<mat-card class=\"example-card margin-1rem\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Covid-19 Cases in {{stateName}}</mat-card-title>\n    <mat-card-subtitle>\n      <mat-card-actions>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width padding-sides-1rem\">\n            <input type=\"text\" placeholder=\"Select District\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\n              [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onStateChange($event)\">\n              <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                {{option}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </form>\n      </mat-card-actions>\n    </mat-card-subtitle>\n\n  </mat-card-header>\n  <div class=\"graphId\">\n    <google-chart [title]=\"districtTitle\" [type]=\"districtType\" [data]=\"districtData\" [options]=\"stateoptions\"\n      [width]=\"width\" [height]=\"height\">\n    </google-chart>\n  </div>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\n@Component({\n  selector: 'app-states',\n  templateUrl: './states.component.html',\n  styleUrls: ['./states.component.scss']\n})\nexport class StatesComponent implements OnInit {\n\n  constructor(private router: ActivatedRoute) { }\n  stateName\n  columnsToDisplay = [\"District\", \"Confirmed\", \"Active\", \"Recovered\", \"Deceased\"];\n  ngOnInit(): void {\n    console.log(this.router.snapshot.params)\n    this.stateName = this.router.snapshot.params.name\n  }\n\n}\n/*\nmin midth=90;\n@media querry*/","<app-header-nav [columnsToDisplay]=\"columnsToDisplay\" [stateNameToDisplay]=\"stateName\" [showStateGraph]=\"true\"></app-header-nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableViewComponent implements OnInit {\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() disableRowClick;\n  rows = [];\n  delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n  State = \"\"\n  Confirmed = 0\n  Recovered = 0\n  Active = 0\n  Deceased = 0\n  description = \"\"\n  dataSource\n  expandedElement: StateCases | null;\n  constructor(private _covidAPI: CovidApiService, private _router: Router) { }\n  initilizeData(data) {\n    this.dataSource = new MatTableDataSource(data);\n  }\n  getStateDetails() {\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        switch (this.columnsToDisplay[0]) {\n          case \"District\":\n            let districtsObj = res[this.stateNameToDisplay][\"districtData\"]\n            this.rows = new Array([])\n            this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n            for (let i in districtsObj) {\n              //console.log(districtsObj[i][\"delta\"])\n              this.delta[\"Confirmed\"] = districtsObj[i][\"delta\"][\"confirmed\"]\n              //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n              this.delta[\"Recovered\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.delta[\"Deceased\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.rows.push({\n                District: i, Confirmed: districtsObj[i]['confirmed'], Active: districtsObj[i]['active'], Recovered: districtsObj[i]['recovered'],\n                Deceased: districtsObj[i]['deceased'], description: \"some\", \"delta\": this.delta\n              })\n            }\n\n            this.rows.shift()\n            //console.log(this.rows)\n            this.rows.sort((a,b)=>a.Confiirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n          case \"State\":\n            Object.keys(res).forEach(key => {\n              if (key !== \"State Unassigned\") {\n                this.State = key\n                this.Active = 0\n                this.Confirmed = 0\n                this.Recovered = 0\n                this.Deceased = 0\n                this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n                Object.keys(res[key]).forEach(district => {\n\n                  if (district === \"districtData\") {\n                    Object.keys(res[key][district]).forEach(city => {\n                      //console.log(res[key][district][city]);\n                      this.Active = this.Active + res[key][district][city][\"active\"];\n                      this.Confirmed = this.Confirmed + res[key][district][city][\"confirmed\"];\n                      this.Recovered = this.Recovered + res[key][district][city][\"recovered\"];\n                      this.Deceased = this.Deceased + res[key][district][city][\"deceased\"]\n                      //console.log(this.delta[\"Confirmed\"])\n                      //console.log(res[key][district][city][\"delta\"])\n                      this.delta[\"Confirmed\"] = this.delta[\"Confirmed\"] + parseInt(res[key][district][city][\"delta\"][\"confirmed\"])\n                      //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n                      this.delta[\"Recovered\"] = (this.delta[\"Recovered\"]) + parseInt(res[key][district][city][\"delta\"][\"recovered\"])\n                      this.delta[\"Deceased\"] = (this.delta[\"Deceased\"]) + parseInt(res[key][district][city][\"delta\"][\"deceased\"])\n                    })\n                  }\n                })\n                //console.log(this.State, this.delta)\n\n                this.rows.push(new Object({\n                  State: this.State, Confirmed: (this.Confirmed), Active: (this.Active),\n                  Recovered: (this.Recovered), Deceased: (this.Deceased), description: \"some\",\n                  delta: { Confirmed: this.delta[\"Confirmed\"], Recovered: this.delta[\"Recovered\"], Deceased: this.delta[\"Deceased\"] }\n                }));\n                //console.log(this.rows)\n\n              }\n            })\n            //console.log(this.rows)\n            this.rows.sort((a,b)=>a.Confirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n\n        }\n      })\n  }\n  ngOnInit() {\n    this.rows.splice(0, this.rows.length)\n    this.getStateDetails()\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  openStateDetails(event, row) {\n    //console.log(row)\n    //let urlLink = \"states/\"+ row.State;\n    //event.push(\"/homepage\")\n    this._router.navigate(['/states/' + row.State])\n  }\n  convertNumberIntoK(value) {\n    if (value >= 1000000) {\n      value = Math.round(value / 1000000) + \"M\"\n    }\n    else if (value >= 1000) {\n      value = Math.round(value / 1000) + \"K\";\n    }\n    return value;\n  }\n\n  onSortByName(){\n    if(this.rows[0]['State']){\n      this.rows= this.rows.sort((a,b)=>(a.State<b.State ? -1 : (a.State > b.State)?1 : 0))\n    } else {\n      this.rows= this.rows.sort((a,b)=>(a.District<b.District ? -1 : (a.District > b.District)?1 : 0))\n    }\n    this.initilizeData(this.rows);\n  }\n\n  onSortByCases(){\n    this.rows.sort((a,b)=> a.Confirmed-b.Confirmed);\n    this.initilizeData(this.rows.reverse())\n  }\n}\n\nexport interface StateCases {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\n","<form class=\"display-flex\">\n  <mat-form-field>\n    <mat-label *ngIf=\"disableRowClick else elseState\">Select District</mat-label>\n    <ng-template #elseState>\n      <mat-label>Select State</mat-label>\n    </ng-template>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. kar\" #input>\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" class=\"menuBtn\" [matMenuTriggerFor]=\"menu\">Menu</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"onSortByName()\">Sort By Name</button>\n    <button mat-menu-item (click)=\"onSortByCases()\" >Sort By Cases</button>\n  </mat-menu>\n</form>\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef class=\"columHeader\"> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\" > \n      <!-- <div [matTooltip]=\"element[column]\" [matTooltipPosition]=\"\" aria-label=\"Button that displays a tooltip when focused or hovered over\">\n      <span class=\"deltaValue\" *ngIf=\"element['delta'][column]>0\"><mat-icon class=\"iconId\">arrow_upward</mat-icon>{{element['delta'][column]}}</span>\n      {{ convertNumberIntoK(element[column])}} \n          </div> -->\n      <mat-list role=\"list\">\n        <div *ngIf=\"element['delta']['Confirm']>0 else noRowReq\">\n          <div *ngIf=\"element['delta'][column]>0 else nonDelta\">\n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" > {{ convertNumberIntoK(element[column])}}</mat-list-item> \n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" > {{element['delta'][column]}} </mat-list-item> \n          </div>\n          <ng-template #nonDelta>\n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" > {{ convertNumberIntoK(element[column])}} </mat-list-item> \n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" >  {{ convertNumberIntoK(element[column])}} </mat-list-item> \n          </ng-template>\n         \n        </div>\n        <ng-template #noRowReq>\n          <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" >  {{ convertNumberIntoK(element[column])}} </mat-list-item> \n        </ng-template>\n      </mat-list>\n    </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-description marginRight\">\n          <button mat-stroked-button color=\"primary\" class=\"tableBtn\"  (click)=\"openStateDetails($event,element)\"><mat-icon>help</mat-icon> Know more</button>\n          <!-- <span class=\"example-element-description-attribution\"> </span> -->\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n    [class.example-expanded-row]=\"expandedElement === element\"\n    (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <div *ngIf=\"!disableRowClick\">\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n  </div>\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidApiService {\n  private _registerUrl = \"https://api.covid19india.org\"; \n  constructor(private http: HttpClient) { }\n  getStates() {\n    return this.http.get<any>(this._registerUrl+\"/state_district_wise.json\");\n  }\n  getCasesByDate(){\n    return this.http.get<any>(this._registerUrl+\"/data.json\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}