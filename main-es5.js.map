{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/district/district.component.ts","webpack:///src/app/components/district/district.component.html","webpack:///src/app/components/graphs/graphs.component.ts","webpack:///src/app/components/graphs/graphs.component.html","webpack:///src/app/components/header-nav/header-nav.component.ts","webpack:///src/app/components/header-nav/header-nav.component.html","webpack:///src/app/components/homepage/homepage.component.ts","webpack:///src/app/components/homepage/homepage.component.html","webpack:///src/app/components/state-graph/state-graph.component.ts","webpack:///src/app/components/state-graph/state-graph.component.html","webpack:///src/app/components/states/states.component.ts","webpack:///src/app/components/states/states.component.html","webpack:///src/app/components/table-view/table-view.component.ts","webpack:///src/app/components/table-view/table-view.component.html","webpack:///src/app/services/covid-api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DistrictComponent","router","console","log","snapshot","params","GraphsComponent","_covidAPI","chart","type","recoveredData","confirmData","deceasedData","data","options","colors","is3D","hAxis","pointSize","crosshair","color","trigger","width","height","stateTitle","stateType","stateData","stateGraphOptions","stateActiveCases","stateName","stateConfirmed","stateRecovered","stateDeceased","stateObject","myControl","stateoptions","getCasesByDate","subscribe","res","forEach","element","push","initilizeDailyGraphData","getStates","Object","key","district","city","active","recovered","deceased","confirmed","filteredOptions","valueChanges","pipe","value","_filter","filterValue","toLowerCase","filter","option","includes","event","slice","length","source","last15Days","onClickConfimButton","onClickRecoveredButton","onClickDeceasedButton","HeaderNavComponent","breakpointObserver","isHandset$","observe","Handset","result","matches","HomepageComponent","columnsToDisplay","StateGraphComponent","districtTitle","districtType","districtData","districtGraphOptions","districtActiveCases","districtName","districtConfirmed","districtRecovered","districtDeceased","districtObject","name","districtsObj","onStateChange","StatesComponent","TableViewComponent","_router","rows","delta","State","Confirmed","Recovered","Active","Deceased","description","dataSource","stateNameToDisplay","Array","i","District","shift","sort","a","b","Confiirmed","initilizeData","reverse","parseInt","splice","getStateDetails","target","trim","row","navigate","Math","round","applyFilter","onSortByName","onSortByCases","minHeight","animations","CovidApiService","http","_registerUrl","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { StatesComponent } from './components/states/states.component';\nimport { DistrictComponent } from './components/district/district.component';\n\nconst routes: Routes = [\n  {\n    path: \"homepage\",\n    component: HomepageComponent\n  },\n  {\n    path: \"states/:name\",\n    component: StatesComponent\n  },\n  {\n    path: \"district/:dname\",\n    component: DistrictComponent\n  },\n  {\n    path: \"**\",\n    component: HomepageComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Covid-app';\n}\n","<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderNavComponent } from './components/header-nav/header-nav.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TableViewComponent } from './components/table-view/table-view.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { GraphsComponent } from './components/graphs/graphs.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { StatesComponent } from './components/states/states.component';\nimport { DistrictComponent } from './components/district/district.component';\nimport { StateGraphComponent } from './components/state-graph/state-graph.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderNavComponent,\n    TableViewComponent,\n    HomepageComponent,\n    GraphsComponent,\n    StatesComponent,\n    DistrictComponent,\n    StateGraphComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    FlexLayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    GoogleChartsModule,\n    MatAutocompleteModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\n@Component({\n  selector: 'app-district',\n  templateUrl: './district.component.html',\n  styleUrls: ['./district.component.scss']\n})\nexport class DistrictComponent implements OnInit {\n\n  constructor(private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.router.snapshot.params)\n  }\n\n}\n","<p>district works!</p>","import { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.scss']\n})\nexport class GraphsComponent implements OnInit {\n  chart = []\n  constructor(private _covidAPI: CovidApiService) { }\n\n  title = 'Number of COVID-19 confirmed cases';\n  type = 'LineChart';\n  recoveredData = []\n  confirmData = []\n  deceasedData = []\n  data = [\n  ];\n  //columnNames = ['Browser', 'Percentage'];\n  options = {\n    colors: ['#e0440e', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],\n    is3D: true,\n    hAxis: {\n      title: 'Date'\n    },\n    // vAxis: {\n    //   title: 'Number of COVID-19 confirmed cases'\n    // },\n    pointSize: 5,\n    crosshair: {\n      color: '#000000',\n      trigger: 'selection'\n    }\n  };\n  width = 350;\n  height = 200;\n\n  stateTitle = \"COVID-19 information in\"\n  stateType = 'BarChart';\n  stateData = []\n  stateGraphOptions = {};\n\n  stateActiveCases = 0;\n  stateName = \"\";\n  stateConfirmed = 0\n  stateRecovered = 0\n  stateDeceased = 0\n  stateObject = {}\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit(): void {\n    this._covidAPI.getCasesByDate().subscribe(\n      (res) => {\n        res[\"cases_time_series\"].forEach(element => {\n          this.confirmData.push([element[\"date\"], +element[\"totalconfirmed\"]])\n          this.data.push([element[\"date\"], +element[\"totalconfirmed\"]]);\n          this.deceasedData.push([element[\"date\"], +element[\"totaldeceased\"]])\n          this.recoveredData.push([element[\"date\"], +element[\"totalrecovered\"]])\n        })\n        this.initilizeDailyGraphData(this.confirmData)\n      }\n    )\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        Object.keys(res).forEach(key => {\n          if (key !== \"State Unassigned\") {\n            this.stateName = key;\n            Object.keys(res[key]).forEach(district => {\n              if (district === \"districtData\") {\n                Object.keys(res[key][district]).forEach(city => {\n                  this.stateActiveCases = this.stateActiveCases + res[key][district][city][\"active\"];\n                  this.stateConfirmed = this.stateConfirmed + res[key][district][city][\"confirmed\"];\n                  this.stateRecovered = this.stateRecovered + res[key][district][city][\"recovered\"];\n                  this.stateDeceased = this.stateDeceased + res[key][district][city][\"deceased\"]\n                })\n              }\n            })\n            this.stateTitle = \"COVID-19 information in Karnataka State\"\n            this.stateObject[this.stateName] = { active: this.stateActiveCases, recovered: this.stateRecovered, deceased: this.stateDeceased, confirmed: this.stateConfirmed }\n          }\n        })\n        this.stateData = [\n          [\"Active\", this.stateObject[\"Karnataka\"].active],\n          [\"Confirmed\", this.stateObject[\"Karnataka\"].confirmed],\n          [\"Recovered\", this.stateObject[\"Karnataka\"].recovered],\n          [\"Deceased\", this.stateObject[\"Karnataka\"].deceased]\n        ]\n        //console.log(this.stateObject)\n        this.stateoptions = Object.keys(this.stateObject)\n      }\n    )\n\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  onClickConfimButton(event) {\n    this.data = this.confirmData;\n    this.title = 'Number of COVID-19 Confirmed cases'\n  }\n  onClickRecoveredButton(event) {\n    this.data = this.recoveredData;\n    this.title = 'Number of COVID-19 Recovered cases'\n  }\n  onClickDeceasedButton(event) {\n    this.data = this.deceasedData;\n    this.title = 'Number of COVID-19 Deceased cases'\n  }\n  last15Days(event) {\n\n    this.data = this.data.slice(this.data.length - 15, this.data.length);\n    this.title = this.title.includes(\" in last 15 days\")? this.title : this.title+ \" in last 15 days\"\n  }\n  initilizeDailyGraphData(data){\n    this.data=data;\n  }\n\n  onStateChange(event) {\n    console.log(event.source[\"_element\"][\"nativeElement\"][\"outerText\"])\n\n    this.stateData = [\n      [\"Active\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].active],\n      [\"Confirmed\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].confirmed],\n      [\"Recovered\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].recovered],\n      [\"Deceased\", this.stateObject[event.source[\"_element\"][\"nativeElement\"][\"outerText\"]].deceased]\n    ]\n    this.stateTitle = \"COVID-19 information in \" + event.source[\"_element\"][\"nativeElement\"][\"outerText\"] + \" State\"\n  }\n}\n","<mat-card class=\"example-card margin-1rem\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Covid-19 Cases in India</mat-card-title>\n\n    <!-- <mat-card-actions class=\"actionBtn\">\n        <button mat-raised-button color=\"primary\"  (click)=\"last15Days($event)\">last 15 days</button>\n      </mat-card-actions> -->\n    <mat-card-subtitle class=\"headerBtn\">\n      <mat-card-actions class=\"actionBtn\">\n        <button mat-raised-button color=\"primary\" (click)=\"last15Days($event)\" class=\"btn\">last 15 days</button>\n      </mat-card-actions>\n    </mat-card-subtitle>\n\n    <!-- <div>\n      <mat-card-actions>\n        <button mat-button>Confirmed</button></mat-card-actions>\n    </div> -->\n  </mat-card-header>\n  <div class=\"graphId1\">\n    <google-chart [title]=\"title\" [type]=\"type\" [data]=\"data\" [options]=\"options\" [width]=\"width\" [height]=\"height\">\n    </google-chart>\n  </div>\n  <!-- <mat-card-content>\n      <p>\n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n        bred for hunting.\n      </p>\n    </mat-card-content> -->\n  <mat-card-actions class=\"display-flex\">\n    <button mat-stroked-button (click)=\"onClickConfimButton($event)\" class=\"btn\" color=\"primary\">Confirmed</button>\n    <button mat-stroked-button (click)=\"onClickRecoveredButton($event)\" class=\"btn\" color=\"primary\">Recovered</button>\n    <button mat-stroked-button (click)=\"onClickDeceasedButton($event)\" class=\"btn\" color=\"primary\">Deceased</button>\n  </mat-card-actions>\n</mat-card>\n\n\n<!-- <div id=\"graphId\">\n    <google-chart [title]=\"title\" [type]=\"type\" [data]=\"data\" [options]=\"options\" [width]=\"width\" [height]=\"height\">\n    </google-chart>\n</div> -->\n\n<mat-card class=\"example-card margin-1rem\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Covid-19 Cases in India</mat-card-title>\n    <mat-card-subtitle>\n      <mat-card-actions>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width padding-sides-1rem\">\n            <input type=\"text\" placeholder=\"Select State\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\n              [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n              <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\"\n                (onSelectionChange)=\"onStateChange($event)\">\n                {{option}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </form>\n      </mat-card-actions>\n    </mat-card-subtitle>\n\n  </mat-card-header>\n  <div class=\"graphId2\">\n    <google-chart [title]=\"stateTitle\" [type]=\"stateType\" [data]=\"stateData\" [options]=\"stateoptions\" [width]=\"width\"\n      [height]=\"height\">\n    </google-chart>\n  </div>\n</mat-card>","import { Component, Input, OnInit, Output, EventEmitter} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header-nav',\n  templateUrl: './header-nav.component.html',\n  styleUrls: ['./header-nav.component.scss']\n})\nexport class HeaderNavComponent implements OnInit{\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() showStateGraph;\n  ngOnInit(){\n    \n  }\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/homepage\">Home</a>\n      <a mat-list-item routerLink=\"#\">About Covid-19</a>\n      <a mat-list-item routerLink=\"#\">Help</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Covid-app</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"65%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n        <app-table-view [columnsToDisplay]=\"columnsToDisplay\" [stateNameToDisplay]=\"stateNameToDisplay\" [disableRowClick]=\"showStateGraph\"></app-table-view>\n      </div>\n      <div fxFlex=\"35%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\n          <div *ngIf=\"showStateGraph else indaGraphs\">\n            <app-state-graph></app-state-graph>\n          </div>\n          <ng-template #indaGraphs>  \n          <app-graphs></app-graphs>\n        </ng-template>\n        </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { map } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor(private _covidAPI: CovidApiService) { }\n  columnsToDisplay = [\"State\", \"Confirmed\", \"Active\", \"Recovered\", \"Deceased\"];\n  ngOnInit(): void {\n\n    }\n\n}\n","<app-header-nav [columnsToDisplay]=\"columnsToDisplay\"></app-header-nav>","import { Component, OnInit } from '@angular/core';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-state-graph',\n  templateUrl: './state-graph.component.html',\n  styleUrls: ['./state-graph.component.scss']\n})\n\nexport class StateGraphComponent implements OnInit {\n  chart = []\n  constructor(private _covidAPI: CovidApiService, private router: ActivatedRoute) { }\n\n  width = 350;\n  height = 200;\n\n  districtTitle = \"COVID-19 information in\"\n  districtType = 'BarChart';\n  districtData = []\n  districtGraphOptions = {};\n\n  districtActiveCases = 0;\n  districtName = \"\";\n  districtConfirmed = 0\n  districtRecovered = 0\n  districtDeceased = 0\n  districtObject = {}\n  stateName = \"\"\n\n  myControl = new FormControl();\n  stateoptions: string[] = [];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit(): void {\n\n    this.stateName = this.router.snapshot.params.name;\n\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n\n        let districtsObj = res[this.stateName][\"districtData\"]\n        this.districtObject = districtsObj\n        this.stateoptions = Object.keys(districtsObj)\n        this.districtData = [\n          [\"Active\", districtsObj[this.stateoptions[0]].active],\n          [\"Confirmed\", districtsObj[this.stateoptions[0]].confirmed],\n          [\"Recovered\", districtsObj[this.stateoptions[0]].recovered],\n          [\"Deceased\", districtsObj[this.stateoptions[0]].deceased]\n        ]\n        this.districtTitle = \"COVID-19 information in \" + this.stateoptions[0];\n        console.log(this.stateoptions[0])\n        });\n\n      this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.stateoptions.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  onStateChange(event){\n    //console.log(event.option.value)\n    this.districtData = [\n          [\"Active\", this.districtObject[event.option.value].active],\n          [\"Confirmed\", this.districtObject[event.option.value].confirmed],\n          [\"Recovered\", this.districtObject[event.option.value].recovered],\n          [\"Deceased\", this.districtObject[event.option.value].deceased]\n        ]\n        this.districtTitle = \"COVID-19 information in \" + event.option.value + \" District\"\n  }\n}\n","<mat-card class=\"example-card margin-1rem\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Covid-19 Cases in {{stateName}}</mat-card-title>\n    <mat-card-subtitle>\n      <mat-card-actions>\n        <form class=\"example-form\">\n          <mat-form-field class=\"example-full-width padding-sides-1rem\">\n            <input type=\"text\" placeholder=\"Select District\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\n              [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onStateChange($event)\">\n              <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                {{option}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </form>\n      </mat-card-actions>\n    </mat-card-subtitle>\n\n  </mat-card-header>\n  <div class=\"graphId\">\n    <google-chart [title]=\"districtTitle\" [type]=\"districtType\" [data]=\"districtData\" [options]=\"stateoptions\"\n      [width]=\"width\" [height]=\"height\">\n    </google-chart>\n  </div>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\n@Component({\n  selector: 'app-states',\n  templateUrl: './states.component.html',\n  styleUrls: ['./states.component.scss']\n})\nexport class StatesComponent implements OnInit {\n\n  constructor(private router: ActivatedRoute) { }\n  stateName\n  columnsToDisplay = [\"District\", \"Confirmed\", \"Active\", \"Recovered\", \"Deceased\"];\n  ngOnInit(): void {\n    console.log(this.router.snapshot.params)\n    this.stateName = this.router.snapshot.params.name\n  }\n\n}\n/*\nmin midth=90;\n@media querry*/","<app-header-nav [columnsToDisplay]=\"columnsToDisplay\" [stateNameToDisplay]=\"stateName\" [showStateGraph]=\"true\"></app-header-nav>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CovidApiService } from '../../services/covid-api.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-table-view',\n  templateUrl: './table-view.component.html',\n  styleUrls: ['./table-view.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class TableViewComponent implements OnInit {\n  @Input() columnsToDisplay;\n  @Input() stateNameToDisplay;\n  @Input() disableRowClick;\n  rows = [];\n  delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n  State = \"\"\n  Confirmed = 0\n  Recovered = 0\n  Active = 0\n  Deceased = 0\n  description = \"\"\n  dataSource\n  expandedElement: StateCases | null;\n  constructor(private _covidAPI: CovidApiService, private _router: Router) { }\n  initilizeData(data) {\n    this.dataSource = new MatTableDataSource(data);\n  }\n  getStateDetails() {\n    this._covidAPI.getStates().subscribe(\n      (res) => {\n        switch (this.columnsToDisplay[0]) {\n          case \"District\":\n            let districtsObj = res[this.stateNameToDisplay][\"districtData\"]\n            this.rows = new Array([])\n            this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n            for (let i in districtsObj) {\n              //console.log(districtsObj[i][\"delta\"])\n              this.delta[\"Confirmed\"] = districtsObj[i][\"delta\"][\"confirmed\"]\n              //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n              this.delta[\"Recovered\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.delta[\"Deceased\"] = (districtsObj[i][\"delta\"][\"recovered\"])\n              this.rows.push({\n                District: i, Confirmed: districtsObj[i]['confirmed'], Active: districtsObj[i]['active'], Recovered: districtsObj[i]['recovered'],\n                Deceased: districtsObj[i]['deceased'], description: \"some\", \"delta\": this.delta\n              })\n            }\n\n            this.rows.shift()\n            //console.log(this.rows)\n            this.rows.sort((a,b)=>a.Confiirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n          case \"State\":\n            Object.keys(res).forEach(key => {\n              if (key !== \"State Unassigned\") {\n                this.State = key\n                this.Active = 0\n                this.Confirmed = 0\n                this.Recovered = 0\n                this.Deceased = 0\n                this.delta = { \"Confirmed\": 0, \"Recovered\": 0, \"Deceased\": 0 }\n                Object.keys(res[key]).forEach(district => {\n\n                  if (district === \"districtData\") {\n                    Object.keys(res[key][district]).forEach(city => {\n                      //console.log(res[key][district][city]);\n                      this.Active = this.Active + res[key][district][city][\"active\"];\n                      this.Confirmed = this.Confirmed + res[key][district][city][\"confirmed\"];\n                      this.Recovered = this.Recovered + res[key][district][city][\"recovered\"];\n                      this.Deceased = this.Deceased + res[key][district][city][\"deceased\"]\n                      //console.log(this.delta[\"Confirmed\"])\n                      //console.log(res[key][district][city][\"delta\"])\n                      this.delta[\"Confirmed\"] = this.delta[\"Confirmed\"] + parseInt(res[key][district][city][\"delta\"][\"confirmed\"])\n                      //this.delta[\"Active\"] = parseInt(this.delta[\"Active\"] )+ parseInt(res[key][district][city][\"delta\"][\"active\"])\n                      this.delta[\"Recovered\"] = (this.delta[\"Recovered\"]) + parseInt(res[key][district][city][\"delta\"][\"recovered\"])\n                      this.delta[\"Deceased\"] = (this.delta[\"Deceased\"]) + parseInt(res[key][district][city][\"delta\"][\"deceased\"])\n                    })\n                  }\n                })\n                //console.log(this.State, this.delta)\n\n                this.rows.push(new Object({\n                  State: this.State, Confirmed: (this.Confirmed), Active: (this.Active),\n                  Recovered: (this.Recovered), Deceased: (this.Deceased), description: \"some\",\n                  delta: { Confirmed: this.delta[\"Confirmed\"], Recovered: this.delta[\"Recovered\"], Deceased: this.delta[\"Deceased\"] }\n                }));\n                //console.log(this.rows)\n\n              }\n            })\n            //console.log(this.rows)\n            this.rows.sort((a,b)=>a.Confirmed-b.Confirmed);\n            this.initilizeData(this.rows.reverse())\n            break;\n\n        }\n      })\n  }\n  ngOnInit() {\n    this.rows.splice(0, this.rows.length)\n    this.getStateDetails()\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  openStateDetails(event, row) {\n    //console.log(row)\n    //let urlLink = \"states/\"+ row.State;\n    //event.push(\"/homepage\")\n    this._router.navigate(['/states/' + row.State])\n  }\n  convertNumberIntoK(value) {\n    if (value >= 1000000) {\n      value = Math.round(value / 1000000) + \"M\"\n    }\n    else if (value >= 1000) {\n      value = Math.round(value / 1000) + \"K\";\n    }\n    return value;\n  }\n\n  onSortByName(){\n    if(this.rows[0]['State']){\n      this.rows= this.rows.sort((a,b)=>(a.State<b.State ? -1 : (a.State > b.State)?1 : 0))\n    } else {\n      this.rows= this.rows.sort((a,b)=>(a.District<b.District ? -1 : (a.District > b.District)?1 : 0))\n    }\n    this.initilizeData(this.rows);\n  }\n\n  onSortByCases(){\n    this.rows.sort((a,b)=> a.Confirmed-b.Confirmed);\n    this.initilizeData(this.rows.reverse())\n  }\n}\n\nexport interface StateCases {\n  State: string;\n  Confirmed: number;\n  Active: number;\n  Recovered: number;\n  Deceased: number;\n}\n","<form class=\"display-flex\">\n  <mat-form-field>\n    <mat-label *ngIf=\"disableRowClick else elseState\">Select District</mat-label>\n    <ng-template #elseState>\n      <mat-label>Select State</mat-label>\n    </ng-template>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. kar\" #input>\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" class=\"menuBtn\" [matMenuTriggerFor]=\"menu\">Menu</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item (click)=\"onSortByName()\">Sort By Name</button>\n    <button mat-menu-item (click)=\"onSortByCases()\" >Sort By Cases</button>\n  </mat-menu>\n</form>\n<table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of columnsToDisplay\">\n    <th mat-header-cell *matHeaderCellDef class=\"columHeader\"> {{column}} </th>\n    <td mat-cell *matCellDef=\"let element\" > \n      <!-- <div [matTooltip]=\"element[column]\" [matTooltipPosition]=\"\" aria-label=\"Button that displays a tooltip when focused or hovered over\">\n      <span class=\"deltaValue\" *ngIf=\"element['delta'][column]>0\"><mat-icon class=\"iconId\">arrow_upward</mat-icon>{{element['delta'][column]}}</span>\n      {{ convertNumberIntoK(element[column])}} \n          </div> -->\n      <mat-list role=\"list\">\n        <div *ngIf=\"element['delta']['Confirm']>0 else noRowReq\">\n          <div *ngIf=\"element['delta'][column]>0 else nonDelta\">\n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" > {{ convertNumberIntoK(element[column])}}</mat-list-item> \n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" > {{element['delta'][column]}} </mat-list-item> \n          </div>\n          <ng-template #nonDelta>\n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" > {{ convertNumberIntoK(element[column])}} </mat-list-item> \n            <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" >  {{ convertNumberIntoK(element[column])}} </mat-list-item> \n          </ng-template>\n         \n        </div>\n        <ng-template #noRowReq>\n          <mat-list-item role=\"listitem\" class=\"reduceMargin\" class=\"tableRows\" >  {{ convertNumberIntoK(element[column])}} </mat-list-item> \n        </ng-template>\n      </mat-list>\n    </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-description marginRight\">\n          <button mat-stroked-button color=\"primary\" class=\"tableBtn\"  (click)=\"openStateDetails($event,element)\"><mat-icon>help</mat-icon> Know more</button>\n          <!-- <span class=\"example-element-description-attribution\"> </span> -->\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n    [class.example-expanded-row]=\"expandedElement === element\"\n    (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <div *ngIf=\"!disableRowClick\">\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n  </div>\n  <tr class=\"mat-row\" *matNoDataRow>\n    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n  </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidApiService {\n  private _registerUrl = \"https://api.covid19india.org\"; \n  constructor(private http: HttpClient) { }\n  getStates() {\n    return this.http.get<any>(this._registerUrl+\"/state_district_wise.json\");\n  }\n  getCasesByDate(){\n    return this.http.get<any>(this._registerUrl+\"/data.json\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}